{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/napochaan/Playground/github.com/naporin0624/home-page/src/common/components/Slick.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { memo, useRef, useEffect } from \"react\";\nimport anime from \"animejs\";\nimport styled from \"styled-components\";\n\nvar Slick = function Slick(_ref) {\n  _s();\n\n  var images = _ref.images,\n      duration = _ref.duration,\n      delay = _ref.delay,\n      onChange = _ref.onChange;\n  var ref = useRef(null);\n  var isInitialRenderedRef = useRef(false);\n  useEffect(function () {\n    var targets = ref.current;\n    if (!targets) return;\n\n    function runSlideShow() {\n      var page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      anime({\n        targets: targets,\n        translateX: \"-\".concat(page * 100, \"%\"),\n        duration: duration || 1000,\n        delay: delay || 5000,\n        easing: \"easeInOutQuart\",\n        complete: function complete() {\n          onChange && onChange(images[page]);\n          runSlideShow((page + 1) % images.length);\n        }\n      });\n    }\n\n    if (!isInitialRenderedRef.current) runSlideShow();\n    isInitialRenderedRef.current = true;\n  }, [delay, duration, images, onChange]);\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    ref: ref,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, images.map(function (image) {\n    return __jsx(\"img\", {\n      src: image,\n      key: image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    });\n  })));\n};\n\n_s(Slick, \"JV7kDMbvhnCEj5O2m5z5pEKRxPo=\");\n\n_c = Slick;\nvar Container = styled.div.withConfig({\n  componentId: \"sc-1i1bavs-0\"\n})([\"width:100%;height:100%;overflow:hidden;& > div{display:flex;img{object-position:left top;object-fit:cover;}}\"]);\n_c2 = Container;\nexport default _c3 = memo(Slick);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Slick\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"sources":["/Users/napochaan/Playground/github.com/naporin0624/home-page/src/common/components/Slick.tsx"],"names":["React","memo","useRef","useEffect","anime","styled","Slick","images","duration","delay","onChange","ref","isInitialRenderedRef","targets","current","runSlideShow","page","translateX","easing","complete","length","map","image","Container","div"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,MAAtB,EAA8BC,SAA9B,QAA+C,OAA/C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AASA,IAAMC,KAAsB,GAAG,SAAzBA,KAAyB,OAA2C;AAAA;;AAAA,MAAxCC,MAAwC,QAAxCA,MAAwC;AAAA,MAAhCC,QAAgC,QAAhCA,QAAgC;AAAA,MAAtBC,KAAsB,QAAtBA,KAAsB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AACxE,MAAMC,GAAG,GAAGT,MAAM,CAAiB,IAAjB,CAAlB;AACA,MAAMU,oBAAoB,GAAGV,MAAM,CAAU,KAAV,CAAnC;AACAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMU,OAAO,GAAGF,GAAG,CAACG,OAApB;AACA,QAAI,CAACD,OAAL,EAAc;;AAEd,aAASE,YAAT,GAAgC;AAAA,UAAVC,IAAU,uEAAH,CAAG;AAC9BZ,MAAAA,KAAK,CAAC;AACJS,QAAAA,OAAO,EAAPA,OADI;AAEJI,QAAAA,UAAU,aAAMD,IAAI,GAAG,GAAb,MAFN;AAGJR,QAAAA,QAAQ,EAAEA,QAAQ,IAAI,IAHlB;AAIJC,QAAAA,KAAK,EAAEA,KAAK,IAAI,IAJZ;AAKJS,QAAAA,MAAM,EAAE,gBALJ;AAMJC,QAAAA,QAAQ,EAAE,oBAAM;AACdT,UAAAA,QAAQ,IAAIA,QAAQ,CAACH,MAAM,CAACS,IAAD,CAAP,CAApB;AACAD,UAAAA,YAAY,CAAC,CAACC,IAAI,GAAG,CAAR,IAAaT,MAAM,CAACa,MAArB,CAAZ;AACD;AATG,OAAD,CAAL;AAWD;;AAED,QAAI,CAACR,oBAAoB,CAACE,OAA1B,EAAmCC,YAAY;AAE/CH,IAAAA,oBAAoB,CAACE,OAArB,GAA+B,IAA/B;AACD,GArBQ,EAqBN,CAACL,KAAD,EAAQD,QAAR,EAAkBD,MAAlB,EAA0BG,QAA1B,CArBM,CAAT;AAuBA,SACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEC,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,MAAM,CAACc,GAAP,CAAW,UAACC,KAAD;AAAA,WACV;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,GAAG,EAAEA,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADU;AAAA,GAAX,CADH,CADF,CADF;AASD,CAnCD;;GAAMhB,K;;KAAAA,K;AAqCN,IAAMiB,SAAS,GAAGlB,MAAM,CAACmB,GAAV;AAAA;AAAA,oHAAf;MAAMD,S;AAeN,qBAAetB,IAAI,CAACK,KAAD,CAAnB","sourcesContent":["import React, { memo, useRef, useEffect } from \"react\";\nimport anime from \"animejs\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  images: string[];\n  duration?: number;\n  delay?: number;\n  onChange?: (image: string) => void;\n};\n\nconst Slick: React.FC<Props> = ({ images, duration, delay, onChange }) => {\n  const ref = useRef<HTMLDivElement>(null);\n  const isInitialRenderedRef = useRef<boolean>(false);\n  useEffect(() => {\n    const targets = ref.current;\n    if (!targets) return;\n\n    function runSlideShow(page = 0) {\n      anime({\n        targets,\n        translateX: `-${page * 100}%`,\n        duration: duration || 1000,\n        delay: delay || 5000,\n        easing: \"easeInOutQuart\",\n        complete: () => {\n          onChange && onChange(images[page]);\n          runSlideShow((page + 1) % images.length);\n        },\n      });\n    }\n\n    if (!isInitialRenderedRef.current) runSlideShow();\n\n    isInitialRenderedRef.current = true;\n  }, [delay, duration, images, onChange]);\n\n  return (\n    <Container>\n      <div ref={ref}>\n        {images.map((image) => (\n          <img src={image} key={image} />\n        ))}\n      </div>\n    </Container>\n  );\n};\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n  overflow: hidden;\n\n  & > div {\n    display: flex;\n\n    img {\n      object-position: left top;\n      object-fit: cover;\n    }\n  }\n`;\n\nexport default memo(Slick);\n"]},"metadata":{},"sourceType":"module"}